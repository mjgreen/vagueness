load("data.Rda")
setwd("~/repos/vagueness/experiments/e3/writeup")
load("data.Rda")
subdata = melt(dd,
measure.vars=c("RT_Rec", "RT_RecSqt", "RT_log", "RT_raw"),
variable.name="transformation",
value.name="value")
library(knitr)
suppressPackageStartupMessages(library(MASS))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(lme4))
suppressPackageStartupMessages(library(xtable))
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(lattice))
suppressPackageStartupMessages(library(LMERConvenienceFunctions))
suppressPackageStartupMessages(library(car))
suppressPackageStartupMessages(library(grid))
suppressPackageStartupMessages(library(lmerTest))
suppressPackageStartupMessages(library(reshape2))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(require(languageR))
source("CIfunctions.R")
dat <- read.delim("allresults.txt", stringsAsFactors = FALSE)
# declare local variables
number_of_valid_subjects <- 38
number_of_rows <- 7296
number_of_trials_per_subject <- number_of_rows / number_of_valid_subjects # 192
# sort out borderline responses into expected near and far
# How many squares in the square they chose?
dat$RESPONSE <- as.character(dat$RESPONSE)
for (row in 1 : nrow(dat) ) {
switch(dat[row,'RESPONSE'],
'LEFT' = {dat[row, 'choice'] <- dat[row, 'Left']},
'MIDDLE' = {dat[row, 'choice'] <- dat[row, 'Mid']},
'RIGHT' = {dat[row, 'choice'] <- dat[row, 'Right']}
)
}
dat$crossed=paste('Con',dat$Condition,':Quan',dat$Quantity,':Item',dat$Item,sep="")
dat[dat$crossed=='Con1:Quan1:Item1', 'ResponseExpected'] <-  6
dat[dat$crossed=='Con1:Quan1:Item1', 'ResponseNear']     <- 15
dat[dat$crossed=='Con1:Quan1:Item1', 'ResponseFar']      <- 24
dat[dat$crossed=='Con1:Quan1:Item2', 'ResponseExpected'] <- 16
dat[dat$crossed=='Con1:Quan1:Item2', 'ResponseNear']     <- 25
dat[dat$crossed=='Con1:Quan1:Item2', 'ResponseFar']      <- 34
dat[dat$crossed=='Con1:Quan1:Item3', 'ResponseExpected'] <- 26
dat[dat$crossed=='Con1:Quan1:Item3', 'ResponseNear']     <- 35
dat[dat$crossed=='Con1:Quan1:Item3', 'ResponseFar']      <- 44
dat[dat$crossed=='Con1:Quan1:Item4', 'ResponseExpected'] <- 36
dat[dat$crossed=='Con1:Quan1:Item4', 'ResponseNear']     <- 45
dat[dat$crossed=='Con1:Quan1:Item4', 'ResponseFar']      <- 54
dat[dat$crossed=='Con1:Quan2:Item1', 'ResponseExpected'] <- 24
dat[dat$crossed=='Con1:Quan2:Item1', 'ResponseNear']     <- 15
dat[dat$crossed=='Con1:Quan2:Item1', 'ResponseFar']      <-  6
dat[dat$crossed=='Con1:Quan2:Item2', 'ResponseExpected'] <- 34
dat[dat$crossed=='Con1:Quan2:Item2', 'ResponseNear']     <- 25
dat[dat$crossed=='Con1:Quan2:Item2', 'ResponseFar']      <- 16
dat[dat$crossed=='Con1:Quan2:Item3', 'ResponseExpected'] <- 44
dat[dat$crossed=='Con1:Quan2:Item3', 'ResponseNear']     <- 35
dat[dat$crossed=='Con1:Quan2:Item3', 'ResponseFar']      <- 26
dat[dat$crossed=='Con1:Quan2:Item4', 'ResponseExpected'] <- 54
dat[dat$crossed=='Con1:Quan2:Item4', 'ResponseNear']     <- 45
dat[dat$crossed=='Con1:Quan2:Item4', 'ResponseFar']      <- 36
dat[dat$crossed=='Con2:Quan1:Item1', 'ResponseExpected'] <-  6
dat[dat$crossed=='Con2:Quan1:Item1', 'ResponseNear']     <- 15
dat[dat$crossed=='Con2:Quan1:Item1', 'ResponseFar']      <- 24
dat[dat$crossed=='Con2:Quan1:Item2', 'ResponseExpected'] <- 16
dat[dat$crossed=='Con2:Quan1:Item2', 'ResponseNear']     <- 25
dat[dat$crossed=='Con2:Quan1:Item2', 'ResponseFar']      <- 34
dat[dat$crossed=='Con2:Quan1:Item3', 'ResponseExpected'] <- 26
dat[dat$crossed=='Con2:Quan1:Item3', 'ResponseNear']     <- 35
dat[dat$crossed=='Con2:Quan1:Item3', 'ResponseFar']      <- 44
dat[dat$crossed=='Con2:Quan1:Item4', 'ResponseExpected'] <- 36
dat[dat$crossed=='Con2:Quan1:Item4', 'ResponseNear']     <- 45
dat[dat$crossed=='Con2:Quan1:Item4', 'ResponseFar']      <- 54
dat[dat$crossed=='Con2:Quan2:Item1', 'ResponseExpected'] <- 24
dat[dat$crossed=='Con2:Quan2:Item1', 'ResponseNear']     <- 15
dat[dat$crossed=='Con2:Quan2:Item1', 'ResponseFar']      <-  6
dat[dat$crossed=='Con2:Quan2:Item2', 'ResponseExpected'] <- 34
dat[dat$crossed=='Con2:Quan2:Item2', 'ResponseNear']     <- 25
dat[dat$crossed=='Con2:Quan2:Item2', 'ResponseFar']      <- 16
dat[dat$crossed=='Con2:Quan2:Item3', 'ResponseExpected'] <- 44
dat[dat$crossed=='Con2:Quan2:Item3', 'ResponseNear']     <- 35
dat[dat$crossed=='Con2:Quan2:Item3', 'ResponseFar']      <- 26
dat[dat$crossed=='Con2:Quan2:Item4', 'ResponseExpected'] <- 54
dat[dat$crossed=='Con2:Quan2:Item4', 'ResponseNear']     <- 45
dat[dat$crossed=='Con2:Quan2:Item4', 'ResponseFar']      <- 36
dat[dat$crossed=='Con3:Quan1:Item1', 'ResponseExpected'] <-  6
dat[dat$crossed=='Con3:Quan1:Item1', 'ResponseNear']     <- 15
dat[dat$crossed=='Con3:Quan1:Item1', 'ResponseFar']      <- 24
dat[dat$crossed=='Con3:Quan1:Item2', 'ResponseExpected'] <- 16
dat[dat$crossed=='Con3:Quan1:Item2', 'ResponseNear']     <- 25
dat[dat$crossed=='Con3:Quan1:Item2', 'ResponseFar']      <- 34
dat[dat$crossed=='Con3:Quan1:Item3', 'ResponseExpected'] <- 26
dat[dat$crossed=='Con3:Quan1:Item3', 'ResponseNear']     <- 35
dat[dat$crossed=='Con3:Quan1:Item3', 'ResponseFar']      <- 44
dat[dat$crossed=='Con3:Quan1:Item4', 'ResponseExpected'] <- 36
dat[dat$crossed=='Con3:Quan1:Item4', 'ResponseNear']     <- 45
dat[dat$crossed=='Con3:Quan1:Item4', 'ResponseFar']      <- 54
dat[dat$crossed=='Con3:Quan2:Item1', 'ResponseExpected'] <- 24
dat[dat$crossed=='Con3:Quan2:Item1', 'ResponseNear']     <- 15
dat[dat$crossed=='Con3:Quan2:Item1', 'ResponseFar']      <-  6
dat[dat$crossed=='Con3:Quan2:Item2', 'ResponseExpected'] <- 34
dat[dat$crossed=='Con3:Quan2:Item2', 'ResponseNear']     <- 25
dat[dat$crossed=='Con3:Quan2:Item2', 'ResponseFar']      <- 16
dat[dat$crossed=='Con3:Quan2:Item3', 'ResponseExpected'] <- 44
dat[dat$crossed=='Con3:Quan2:Item3', 'ResponseNear']     <- 35
dat[dat$crossed=='Con3:Quan2:Item3', 'ResponseFar']      <- 26
dat[dat$crossed=='Con3:Quan2:Item4', 'ResponseExpected'] <- 54
dat[dat$crossed=='Con3:Quan2:Item4', 'ResponseNear']     <- 45
dat[dat$crossed=='Con3:Quan2:Item4', 'ResponseFar']      <- 36
dat[dat$crossed=='Con4:Quan1:Item1', 'ResponseExpected'] <-  6
dat[dat$crossed=='Con4:Quan1:Item1', 'ResponseNear']     <- 15
dat[dat$crossed=='Con4:Quan1:Item1', 'ResponseFar']      <- 24
dat[dat$crossed=='Con4:Quan1:Item2', 'ResponseExpected'] <- 16
dat[dat$crossed=='Con4:Quan1:Item2', 'ResponseNear']     <- 25
dat[dat$crossed=='Con4:Quan1:Item2', 'ResponseFar']      <- 34
dat[dat$crossed=='Con4:Quan1:Item3', 'ResponseExpected'] <- 26
dat[dat$crossed=='Con4:Quan1:Item3', 'ResponseNear']     <- 35
dat[dat$crossed=='Con4:Quan1:Item3', 'ResponseFar']      <- 44
dat[dat$crossed=='Con4:Quan1:Item4', 'ResponseExpected'] <- 36
dat[dat$crossed=='Con4:Quan1:Item4', 'ResponseNear']     <- 45
dat[dat$crossed=='Con4:Quan1:Item4', 'ResponseFar']      <- 54
dat[dat$crossed=='Con4:Quan2:Item1', 'ResponseExpected'] <- 24
dat[dat$crossed=='Con4:Quan2:Item1', 'ResponseNear']     <- 15
dat[dat$crossed=='Con4:Quan2:Item1', 'ResponseFar']      <-  6
dat[dat$crossed=='Con4:Quan2:Item2', 'ResponseExpected'] <- 34
dat[dat$crossed=='Con4:Quan2:Item2', 'ResponseNear']     <- 25
dat[dat$crossed=='Con4:Quan2:Item2', 'ResponseFar']      <- 16
dat[dat$crossed=='Con4:Quan2:Item3', 'ResponseExpected'] <- 44
dat[dat$crossed=='Con4:Quan2:Item3', 'ResponseNear']     <- 35
dat[dat$crossed=='Con4:Quan2:Item3', 'ResponseFar']      <- 26
dat[dat$crossed=='Con4:Quan2:Item4', 'ResponseExpected'] <- 54
dat[dat$crossed=='Con4:Quan2:Item4', 'ResponseNear']     <- 45
dat[dat$crossed=='Con4:Quan2:Item4', 'ResponseFar']      <- 36
dat$isResponseExpected <- dat$choice == dat$ResponseExpected
dat$isResponseNear <- dat$choice == dat$ResponseNear
dat$isResponseFar <- dat$choice == dat$ResponseFar
for ( row in 1:nrow(dat) ) {
dat[row, 'switchResponse'] <-
ifelse(dat[row, 'isResponseExpected']==TRUE, 'Expected',
ifelse(dat[row, 'isResponseNear']==TRUE, 'Near', 'Far') )
}
## treat variables
# SUBJECT
# ensure Subject is a factor
dat$Subject=factor(paste("s",sprintf("%02d",dat$Subject),sep=""))
# TRIAL
# Trial for subject, 1 to 192
dat$Trial = rep(x = 1:number_of_trials_per_subject, times = number_of_valid_subjects)
# make a centred Trial for modeling
dat$c_Trl <-dat$Trial - mean(dat$Trial)
# make a scaled Trial for modelling
dat$s_Trl <- as.numeric(scale(dat$Trial))
# ID
# id is a unique identifier for the 7680 row data
dat$id <- factor(paste(paste(dat$Subject),
paste("t", sprintf("%03d", dat$Trial), sep="") , sep=":"))
# ITEM
# create a centred numeric item variable for modeling
dat$c_Itm <- ifelse(dat$Item==1, -.75,
ifelse(dat$Item==2, -.25,
ifelse(dat$Item==3, .25, .75)))
# make Item be a factor and assign labels
dat$Item <- factor(dat$Item, levels=c(1,2,3,4), labels=c("06:15:24", "16:25:34", "26:35:44", "36:45:54"))
# add ratios for Item
item_range_ratio = c(6 / 24, 16 / 34, 26 / 44, 36 / 54)
# 0.2500000 0.4705882 0.5909091 0.6666667
item_range_ratio_scaled = as.vector(scale(c(6 / 24, 16 / 34, 26 / 44, 36 / 54)))
# -1.3441995 -0.1316642  0.5297187  0.9461450
item_mean_ratio = c(mean(c(6 / 15, 15 / 24)), mean(c(16 / 25, 25 / 34)), mean(c(26 /35, 35 / 44)), mean(c(36 / 45, 45 / 54)))
# 0.5125000 0.6876471 0.7691558 0.8166667
item_mean_ratio_scaled = as.vector(scale(c(mean(c(6 / 15, 15 / 24)), mean(c(16 / 25, 25 / 34)), mean(c(26 /35, 35 / 44)), mean(c(36 / 45, 45 / 54)))))
# -1.37582241 -0.06614191  0.54334858 0.89861574
dat[dat$Item == "06:15:24", "item_range_ratio"] <-  0.2500000
dat[dat$Item == "16:25:34", "item_range_ratio"] <-  0.4705882
dat[dat$Item == "26:35:44", "item_range_ratio"] <-  0.5909091
dat[dat$Item == "36:45:54", "item_range_ratio"] <-  0.6666667
dat[dat$Item == "06:15:24", "item_range_ratio_scaled"] <-  -1.3441995
dat[dat$Item == "16:25:34", "item_range_ratio_scaled"] <-  -0.1316642
dat[dat$Item == "26:35:44", "item_range_ratio_scaled"] <-   0.5297187
dat[dat$Item == "36:45:54", "item_range_ratio_scaled"] <-   0.9461450
dat[dat$Item == "06:15:24", "item_mean_ratio"] <-  0.5125000
dat[dat$Item == "16:25:34", "item_mean_ratio"] <-  0.6876471
dat[dat$Item == "26:35:44", "item_mean_ratio"] <-  0.7691558
dat[dat$Item == "36:45:54", "item_mean_ratio"] <-  0.8166667
dat[dat$Item == "06:15:24", "item_mean_ratio_scaled"] <-   -1.37582241
dat[dat$Item == "16:25:34", "item_mean_ratio_scaled"] <-   -0.06614191
dat[dat$Item == "26:35:44", "item_mean_ratio_scaled"] <-    0.54334858
dat[dat$Item == "36:45:54", "item_mean_ratio_scaled"] <-    0.89861574
# VAGUENESS
# Create a factor coding for Vagueness
dat[ dat$Condition==1 , 'Vagueness'] <- 'Vague'
dat[ dat$Condition==2 , 'Vagueness'] <- 'Crisp'
dat[ dat$Condition==3 , 'Vagueness'] <- 'Vague'
dat[ dat$Condition==4 , 'Vagueness'] <- 'Crisp'
dat$Vagueness <- as.factor(dat$Vagueness)
# manually center Vagueness
dat$c_Vag <- ifelse(dat$Vagueness=='Crisp', -.5, .5)
dat$Selection = ""
dat[dat$Condition %in% c(1,2), "Selection"] <- "matching"
dat[dat$Condition %in% c(3,4), "Selection"] <- "comparison"
dat$Selection.sum <- ifelse(dat$Selection=="matching", .5, -.5)
dat$Selection <- as.factor(dat$Selection)
# remove one zero RT by replacing with NA
dat$RT[dat$RT==0]<-NA
# ORDER
# give the levels of Order meaningful names
dat$Order <- factor(dat$Order, levels=c(1,2), labels=c('LtoR','RtoL'))
# make a manually centred Order
dat$c_Ord <- ifelse(dat$Order=="LtoR",-.5,.5)
# QUANTITY
# give the levels of Quantity meaningful names
dat$Quantity <- factor(dat$Quantity, levels=c(1,2), labels=c('Small','Large'))
# make a manually centred Quantity
dat$c_Qty <- ifelse(dat$Quantity=="Small",-.5,.5)
# INSTRUCTION
# add number of characters in the instruction # 29 30 34 36 38
dat$nchar_instr = nchar(as.character(dat$Instruction))
dat$nchar_instr_scaled = as.vector(scale(nchar(as.character(dat$Instruction)), scale=TRUE))
# make Instruction be a factor (17 levels)
dat$Instruction <- as.factor(dat$Instruction)
# RT
# add transformations of RT
dat$RT_RecSqd    <- 1/dat$RT^2
dat$RT_Rec       <- 1/dat$RT
dat$RT_RecSqt    <- 1/sqrt(dat$RT)
dat$RT_log       <- log(dat$RT)
dat$RT_sqt       <- sqrt(dat$RT)
dat$RT_raw       <- dat$RT
dat$RT_sqd       <- dat$RT^2
# The dat data set contains *all* trials including impossible trials
# and is mainly for graphs comparing different removals
# lose impossible trials
dd <- dat
dd$RT[dd$RT == 1 ] <- NA
dd$RT[dd$RT > 40000 ] <- NA
dd <- dd[complete.cases(dd),]
row.names(dd) <- NULL
# add preceding RT: because we removed impossible trials, the value for preceding RT for a trial following an impossible trial is the value of the trial that preceded the impossible trial.
dd$RTprev <- NA
for (s in levels(dd$Subject)) {
nrows = nrow(dd[dd$Subject==s,])
for (i in 1:nrows) {
if (i==1) {
dd[dd$Subject==s, "RTprev"][i] <- dd[dd$Subject==s, "RT"][i]
}
else
dd[dd$Subject==s, "RTprev"][i] <- dd[dd$Subject==s, "RT"][i-1]
}
# add transformations of previous RT
dd$RTprev_RecSqd    <- 1/dd$RTprev^2
dd$RTprev_Rec       <- 1/dd$RTprev
dd$RTprev_RecSqt0   <- 1/sqrt(dd$RTprev)
dd$RTprev_RecSqt    <- as.vector(scale( 1/sqrt(dd$RTprev)  ))
dd$RTprev_log       <- log(dd$RTprev)
dd$RTprev_sqt       <- sqrt(dd$RTprev)
dd$RTprev_raw       <- dd$RTprev
dd$RTprev_sqd       <- dd$RTprev^2
# save dd as data.Rda
# This data set non-impossible trials and renamed/recomputed variables
save(dd, file="data.Rda")
load("data.Rda")
# allow reference to transformation
subdata = melt(dd,
measure.vars=c("RT_Rec", "RT_RecSqt", "RT_log", "RT_raw"),
variable.name="transformation",
value.name="value")
# boxplots for subjects and items separately for each dependent variable
ggplot(subdata) +
facet_wrap(~ variable, scales="free", ncol=4) +
geom_boxplot(aes(y=value, x=Item, col="Items")) +
geom_boxplot(aes(y=value, x=Subject, col="Subjects")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), aspect.ratio=1, panel.grid=element_blank()) +
scale_colour_manual("",values=c("Items"="red","Subjects"="blue")) +
xlab("") + ylab("")
head(dd)
?melt
melt(dd, measure.vars = ("RT_Rec", "RT_RecSqt", "RT_log", "RT_raw"))
melt(dd, measure.vars = c("RT_Rec", "RT_RecSqt", "RT_log", "RT_raw"))
names9dd
names(dd)
melt(dd, measure.vars = c("RT_Rec", "RT_RecSqt", "RT_log", "RT_raw"), variable.name="foo")
k=melt(dd, measure.vars = c("RT_Rec", "RT_RecSqt", "RT_log", "RT_raw"), variable.name="foo")
head(k)
subdata = melt(dd,
measure.vars=c("RT_Rec", "RT_RecSqt", "RT_log", "RT_raw"),
variable.name="transformation",
value.name="value")
load("data.Rda")
# allow reference to transformation
subdata = melt(dd,
measure.vars=c("RT_Rec", "RT_RecSqt", "RT_log", "RT_raw"),
variable.name="transformation",
value.name="value")
# boxplots for subjects and items separately for each dependent variable
ggplot(subdata) +
facet_wrap(~ variable, scales="free", ncol=4) +
geom_boxplot(aes(y=value, x=Item, col="Items")) +
geom_boxplot(aes(y=value, x=Subject, col="Subjects")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), aspect.ratio=1, panel.grid=element_blank()) +
scale_colour_manual("",values=c("Items"="red","Subjects"="blue")) +
xlab("") + ylab("")
names(subdata)
ggplot(subdata) +
facet_wrap(~ variable, scales="free", ncol=4) +
geom_boxplot(aes(y=value, x=Item, col="Items")) +
geom_boxplot(aes(y=value, x=Subject, col="Subjects")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), aspect.ratio=1, panel.grid=element_blank()) +
scale_colour_manual("",values=c("Items"="red","Subjects"="blue")) +
xlab("") + ylab("")
load("data.Rda")
# allow reference to transformation
subdata = melt(dd,
measure.vars=c("RT_Rec", "RT_RecSqt", "RT_log", "RT_raw"),
variable.name="transformation",
value.name="value")
# boxplots for subjects and items separately for each dependent variable
ggplot(subdata) +
facet_wrap(~ transformation, scales="free", ncol=4) +
geom_boxplot(aes(y=value, x=Item, col="Items")) +
geom_boxplot(aes(y=value, x=Subject, col="Subjects")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), aspect.ratio=1, panel.grid=element_blank()) +
scale_colour_manual("",values=c("Items"="red","Subjects"="blue")) +
xlab("") + ylab("")
